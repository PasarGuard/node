name: Build and Push Docker Image (On Release)

on:
  release:
    types: [created]

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}
  GHCR_IMAGE: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}
  IMAGE_LATEST: ${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
  GHCR_IMAGE_LATEST: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
  BINARY_NAME: pasarguard-node-linux

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          check-latest: true

      - name: Build binaries for all architectures
        run: |
          mkdir -p binaries
          # Build for amd64
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 make build
          mv ${{env.BINARY_NAME}}-amd64 binaries/

          # Build for arm64
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 make build
          mv ${{env.BINARY_NAME}}-arm64 binaries/

          ls -la binaries/

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{env.GHCR_IMAGE}}

      - name: Set Docker tags
        id: tags
        run: |
          if [ "${{ github.event.release.prerelease }}" = "true" ]; then
            # Pre-release: only version tags
            echo "DOCKER_TAGS=${{env.IMAGE}},${{env.GHCR_IMAGE}}" >> $GITHUB_ENV
          else
            # Regular release: version tags + latest tags
            echo "DOCKER_TAGS=${{env.IMAGE}},${{env.IMAGE_LATEST}},${{env.GHCR_IMAGE}},${{env.GHCR_IMAGE_LATEST}}" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.multi
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.DOCKER_TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
